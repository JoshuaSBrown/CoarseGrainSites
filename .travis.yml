sudo: required

language: cpp

dist: trusty

env:
  global:
    - CODECOV_TOKEN="2f8f46e7-953b-4d71-8529-4f7f4894eeef"

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - gcc-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - COMPILE_FLAGS="-DENABLE_TESTING=ON"
        - CODE_COVERAGE="ON"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - gcc-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - COMPILE_FLAGS="-DENABLE_TESTING=ON"
        - CODE_COVERAGE="ON"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - gcc-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - COMPILE_FLAGS="-DCXXTEST_ADD_PERFORMANCE=ON -DCMAKE_BUILD_TYPE=Release"
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - gcc-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - COMPILE_FLAGS="-DCXXTEST_ADD_PERFORMANCE=ON -DCMAKE_BUILD_TYPE=Release"

before_script:
  - sudo apt-get install build-essential
  - |
    if [[ "${CODE_COVERAGE}" = "ON" ]]; then
    sudo apt-get install lcov
    fi
  - cmake --version
  - eval "${MATRIX_EVAL}"
  
install:
  - sudo pip install codecov
  - echo "${TRAVIS_BUILD_DIR}"
  - echo "${TRAVIS_OS_NAME}"
  - ls
  - pwd
  - git branch -a
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    CMAKE_URL="http://www.cmake.org/files/v3.4/cmake-3.4.1.tar.gz"
    mkdir cmake && wget ${CMAKE_URL} && tar -xzf cmake-3.4.1.tar.gz && cd cmake-3.4.1/ && ./configure >/dev/null && make >/dev/null && sudo make install >/dev/null
    fi

script:
  - cd "${TRAVIS_BUILD_DIR}"
  - mkdir build
  - cd build
  - pwd
  - cmake "${COMPILE_FLAGS}" "-DCODE_COVERAGE=${CODE_COVERAGE}"  ..
  - make
  - make test ARGS="-V"


after_success:
  - if [[ "${CODE_COVERAGE}" = "ON" ]]; then
    make coverage
    make coverage-upload
    fi
